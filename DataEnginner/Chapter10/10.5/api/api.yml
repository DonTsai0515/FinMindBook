version: '3.0'
services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.cache
    image: linsamtw/api:10
    hostname: "api"
    restart: always
    # swarm 設定
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.labels.api == true]
      labels:
        - traefik.enable=true
        - traefik.frontend.passHostHeader=true
        # routers 設定，這裡
        - traefik.http.routers.api-https.rule=
          Host(`testapi.ddns.net`) && PathPrefix(`/docs`) || 
          Host(`testapi.ddns.net`) && PathPrefix(`/openapi.json`) || 
          Host(`testapi.ddns.net`)
        # api loading balance 的 port
        # traefik 的好處之一，會幫你處理分流
        - traefik.http.services.api-https.loadbalancer.server.port=80
        # SSL 設定
        - traefik.http.routers.api-https.tls.certresolver=myresolver
        # http 自動導向 https
        - "traefik.http.routers.api-http-catchall.rule=hostregexp(`{host:.+}`)"
        - "traefik.http.routers.api-http-catchall.entrypoints=web"
        - "traefik.http.routers.api-http-catchall.middlewares=api-redirect-to-https@docker"
        - "traefik.http.middlewares.api-redirect-to-https.redirectscheme.scheme=https"
    environment:
      - TZ=Asia/Taipei
    networks:
        - my_network
        - traefik-public

networks:
  my_network:
    # 加入已經存在的網路
    external: true
  traefik-public:
    # 需加入 traefik 的網路
    external: true
